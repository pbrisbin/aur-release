#!/bin/sh
set -e

if [ -z "$1" -o "$1" = "-h" -o "$1" = "--help" ]; then
  cat >&2 <<EOM
Usage: aur-release VERSION [NAME] [FILE, ...]
Tag and release an AUR package.

  NAME          Name of the package, defaults to the basename of the current
                working directory.

  VERSION       Version to release as; can be v1.2.3 or 1.2.3, the released
                package will always drop any leading "v" and the created git
                tags will always add it.

  FILE, ...     Files to copy into the AUR repository before releasing. This is
                most useful for an initial release. In such a case, don't forget
                to include the PKGBUILD itself. Files must be specified as
                relative to the project.

EOM
  exit 64
fi

version=$(echo "$1" | sed 's/^v//'); shift
name=${2:-$(basename "$PWD")}; shift
src_repo=$PWD
tmp_repo=$(mktemp -d)/$name

printf "Releasing %s-%s...\n" "$name" "$version"

if git tag | grep -Fxq "v$version"; then
  echo "tag v$version exists"
else
  git tag -s -m "v$version" "v$version"
  git push --tags
fi

git clone "ssh://aur@aur.archlinux.org/$name" "$tmp_repo"

(
  cd "$tmp_repo"

  for file; do
    cp -v "$src_repo/$file" .
    git add "$file"
  done

  sed -i "
    s/^pkgver=.*$/pkgver=$version/; s/=v/=/;
    s/^pkgrel=.*$/pkgrel=1/;" PKGBUILD

  updpkgsums
  mksrcinfo

  git add .SRCINFO PKGBUILD
  git commit -m "Release v$version"
  git push
)

rm -rf "$tmp_repo"
